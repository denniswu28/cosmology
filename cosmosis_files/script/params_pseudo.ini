; Parameter ini file

[DEFAULT]
baseline_dir = .
; Location of 2pt file for DES weak correlation functions (also includes redshift distribution and covariance)
2pt_file = /hpc/group/cosmology/denniswu/cosmosis_files/data/pseudo_roman.fits
; The data to read in from the file, in this case just xi_plus and xi_minus (cosmic shear correlation functions)
2pt_data_sets = xip xim gammat wtheta
; 2pt_data_sets = xip xim
; 2pt_data_sets = gammat wtheta

[output]
filename = /hpc/group/cosmology/denniswu/cosmosis_files/output/roman_roman/output.txt ;
format = text

[runtime]
; Tell cosmosis what sampler to use. Options included in this file are multinest, a nested sampling algorithm, emcee, a more traditional MCMC chain sampler, grid, which calculates the likelihood on a grid of points, and test, which evaluates the likelihood at a single set of parameter.
debug = True
sampler = test
; sampler = multinest
root = /hpc/group/cosmology/

[multinest]
max_iterations = 50000
multinest_outfile_root = multinest_root
resume = F
tolerance = 0.1
constant_efficiency = F
live_points = 50
efficiency = 0.2


[test]
save_dir = /hpc/group/cosmology/denniswu/cosmosis_files/output/roman_roman
fatal_errors = T

[grid]
nsample_dimension = 10
save_dir = /hpc/group/cosmology/denniswu/cosmosis_files/output/CosmoDC2

[emcee]
burn = 0.3
walkers = 160
samples = 10000
nsteps = 5

[pipeline]
; Tells cosmosis how to run the job. Modules are the modules that are going to be run, values are the values at which to evaluate the cosmology or sample over, and priors are the priors on some subset of those parameters. Likelihoods is which likelihoods to evaluate. Extra_output tells cosmosis to save the value of sigma_8 as well, even if we're not sampling over it.
quiet = F
timing = F
debug = T
; modules = consistency camb extrapolate fits_nz pk_to_cl_gg pk_to_cl 2pt_shear 2pt_like
modules = consistency camb extrapolate fits_nz pk_to_cl_gg pk_to_cl 2pt_gal 2pt_gal_shear 2pt_shear 2pt_like
; modules = consistency camb extrapolate fits_nz pk_to_cl 2pt_shear 2pt # pantheon 
values = /hpc/group/cosmology/denniswu/cosmosis_files/script/values.ini
; values = /hpc/group/cosmology/denniswu/cosmosis_files/script/values_test.ini
priors = /hpc/group/cosmology/denniswu/cosmosis_files/script/priors.ini
likelihoods = 2pt
extra_output = cosmological_parameters/sigma_8 ;cosmological_parameters/S_8

[consistency]
; Just makes sure you didn't choose self-conflicting parameter choices.
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
; Settings for CAMB. This is the boltzmann equation solver code that gives us the initial perturbation power spectrum and CMB observables (if needed).
file = cosmosis-standard-library/boltzmann/camb/camb_interface.py
mode = all
halofit_version = takahashi
lmax = 2500
feedback = 0
kmin = 1e-5
kmax = 100.0
nk = 500
; accuracy_boost = 0.4

[extrapolate]
; Code to extrapolate the power spectrum beyond where we solve for it with a power law. Approximate, but fast.
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.

[fits_nz]
; Read in the redshift distributions for each correlation function measurement.
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(2PT_FILE)s
data_sets = source lens
prefix_section = T
prefix_extension = T

[pk_to_cl]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min_logspaced = 0.1
ell_max_logspaced = 5.0e5
; n_ell_logspaced = 400
n_ell_logspaced = 100
shear-shear = source-source
lingal-shear = lens-source
verbose = F
get_kernel_peaks = F
sig_over_dchi = 20.
shear_kernel_dchi = 10.


[pk_to_cl_gg]
file = cosmosis-standard-library/structure/projection/project_2d.py
lingal-lingal = lens-lens
do_exact = lingal-lingal
do_rsd = True
ell_min_linspaced = 1
ell_max_linspaced = 4
n_ell_linspaced = 5
ell_min_logspaced = 5.
ell_max_logspaced = 5.e5
n_ell_logspaced = 80
limber_ell_start = 200
ell_max_logspaced=1.e5
auto_only=lingal-lingal
sig_over_dchi_exact = 3.5



[2pt_gal]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='00'
theta_file=%(2PT_FILE)s
bin_avg = T

[2pt_gal_shear]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='02'
theta_file=%(2PT_FILE)s
bin_avg = T

[2pt_shear]
file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='22'
theta_file=%(2PT_FILE)s
bin_avg = T

[2pt_like]
; Controls how we use the correlation function data. The 'angle_range' parameters tell which angula ranges to use from the measurements for each redshift bin combination. Also calculates the likelihood for the 2pt correlation functions.
file = cosmosis-standard-library/likelihood/2pt/2pt_like.py
include_norm = T
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
make_covariance = F
covmat_name = COVMAT
no_det_fac = False
; angle_range_xip_1_1 = 5.0 50.0
; angle_range_xim_1_1 = 5.0 30.0
; angle_range_gammat_1_1 = 4.0 20.0
; angle_range_wtheta_1_1 = 2.0 35.0

; [save_2pt]
; file = cosmosis-standard-library/likelihood/2pt/save_2pt.py
; theta_min = 1.0
; theta_max = 100.0
; n_theta = 20
; real_space = T
; make_covariance = F
; shear_nz_name = nz_source
; position_nz_name = nz_lens
; filename = data_vectors/sim_%(RUN_NAME)s.fits
; overwrite = T
; auto_only = galaxy_xi
; ;cut_wtheta = 1,2 1,3 2,3 1,4 2,4 3,4 1,5 2,5 3,5 4,5
; spectrum_sections = shear_xi_plus shear_xi_minus galaxy_shear_xi galaxy_xi
; output_extensions = xip xim gammat wtheta
; two_thirds_midpoint = T
; copy_covariance=data_vectors/${DATAFILE}

; [pantheon]
; ; Code to calculate the supernova likelihood
; file = cosmosis-standard-library/likelihood/pantheon/pantheon.py
; data_file = /hpc/group/cosmology/denniswu/cosmosis_files/sample/lcparam_DESonly.txt
; covmat_file = /hpc/group/cosmology/denniswu/cosmosis_files/sample/sys_DESonly_ALLSYS2.txt

; [riess16]
; ; Code to apply the h0 prior from local measurements
; file = cosmosis-standard-library/likelihood/riess16/riess16.py


; [IA]
; ; The intrinsic galaxy alignment model
; file = cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
; do_galaxy_intrinsic = F
; method = bk_corrected

; [add_intrinsic]
; ; The intrinsic galaxy alignment model
; file = cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
; shear-shear = T
; perbin = F

; [ia_z_field]
; ; Add redshift dependence (power-law) to IA model
; file = cosmosis-standard-library/intrinsic_alignments/z_powerlaw/ia_z_powerlaw.py
; do_galaxy_intrinsic = F

; [add_eb]
; file = cosmosis-des-library/IAs/add_bmode_cl/add_bmode_cl.py

; [shear_2pt_eplusb]
; file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
; ell_max = 40000
; xi_type='22'
; theta_file=%(2PT_FILE)s
; bin_avg = T
; input_section_name = shear_cl_eplusb
; output_section_name = shear_xi_eplusb

; [shear_2pt_eminusb]
; file = cosmosis-standard-library/shear/cl_to_xi_fullsky/cl_to_xi_interface.py
; ell_max = 40000
; xi_type='22'
; theta_file=%(2PT_FILE)s
; bin_avg = T
; input_section_name = shear_cl_eminusb
; output_section_name = shear_xi_eminusb

; [choose_xip]
; file = cosmosis-standard-library/utility/copy/copy_section.py
; ; copy shear_xi_eplusb_plus->shear_xi_plus
; ; and  shear_xi_eminusb_minus->shear_xi_minus
; source =  shear_xi_eplusb_plus   shear_xi_eminusb_minus
; dest =    shear_xi_plus          shear_xi_minus
