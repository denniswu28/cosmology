; Parameter ini file

[DEFAULT]
baseline_dir = .
; Location of 2pt file for DES weak correlation functions (also includes redshift distribution and covariance)
2pt_file = /hpc/group/cosmology/phy555_workspace/2pt_NG_mcal_1110.fits
; The data to read in from the file, in this case just xi_plus and xi_minus (cosmic shear correlation functions)
;2pt_data_sets = xip xim gammat wtheta
2pt_data_sets = xip xim

[output]
filename = /hpc/group/cosmology/denniswu/phy555/output/des-w/output.txt
format = text

[runtime]
; Tell cosmosis what sampler to use. Options included in this file are multinest, a nested sampling algorithm, emcee, a more traditional MCMC chain sampler, grid, which calculates the likelihood on a grid of points, and test, which evaluates the likelihood at a single set of parameter.
debug=True
sampler = multinest
root = /hpc/group/cosmology/

[multinest]
max_iterations = 50000
multinest_outfile_root = multinest_root
resume = F
tolerance = 0.1
constant_efficiency = F
live_points = 50
efficiency = 0.3

[test]
save_dir = /hpc/group/cosmology/denniswu/phy555/output/des-default
fatal_errors = T

[grid]
nsample_dimension = 10
save_dir = /hpc/group/cosmology/denniswu/phy555/output/des-default

[emcee]
burn = 0.3
walkers = 160
samples = 10000
nsteps = 5

[pipeline]
; Tells cosmosis how to run the job. Modules are the modules that are going to be run, values are the values at which to evaluate the cosmology or sample over, and priors are the priors on some subset of those parameters. Likelihoods is which likelihoods to evaluate. Extra_output tells cosmosis to save the value of sigma_8 as well, even if we're not sampling over it.
quiet = F
timing = F
debug = T
modules = consistency camb extrapolate fits_nz source_photoz_bias IA ia_z_field pk_to_cl shear_m_bias 2pt_shear 2pt pantheon 
values = /hpc/group/cosmology/denniswu/phy555/sample/values-w.ini
priors = /hpc/group/cosmology/denniswu/phy555/sample/priors.ini
likelihoods = 2pt pantheon 
extra_output = cosmological_parameters/sigma_8

[2pt]
; Controls how we use the correlation function data. The 'angle_range' parameters tell which angula ranges to use from the measurements for each redshift bin combination. Also calculates the likelihood for the 2pt correlation functions.
file = cosmosis-standard-library/likelihood/2pt/2pt_like.py
include_norm = T
data_file = %(2PT_FILE)s
data_sets = %(2PT_DATA_SETS)s
make_covariance = F
covmat_name = COVMAT
angle_range_xip_1_1 = 7.195005 250.0
angle_range_xip_1_2 = 7.195005 250.0
angle_range_xip_1_3 = 5.715196 250.0
angle_range_xip_1_4 = 5.715196 250.0
angle_range_xip_2_1 = 7.195005 250.0
angle_range_xip_2_2 = 4.539741 250.0
angle_range_xip_2_3 = 4.539741 250.0
angle_range_xip_2_4 = 4.539741 250.0
angle_range_xip_3_1 = 5.715196 250.0
angle_range_xip_3_2 = 4.539741 250.0
angle_range_xip_3_3 = 3.606045 250.0
angle_range_xip_3_4 = 3.606045 250.0
angle_range_xip_4_1 = 5.715196 250.0
angle_range_xip_4_2 = 4.539741 250.0
angle_range_xip_4_3 = 3.606045 250.0
angle_range_xip_4_4 = 3.606045 250.0
angle_range_xim_1_1 = 90.579750 250.0
angle_range_xim_1_2 = 71.950053 250.0
angle_range_xim_1_3 = 71.950053 250.0
angle_range_xim_1_4 = 71.950053 250.0
angle_range_xim_2_1 = 71.950053 250.0
angle_range_xim_2_2 = 57.151958 250.0
angle_range_xim_2_3 = 57.151958 250.0
angle_range_xim_2_4 = 45.397414 250.0
angle_range_xim_3_1 = 71.950053 250.0
angle_range_xim_3_2 = 57.151958 250.0
angle_range_xim_3_3 = 45.397414 250.0
angle_range_xim_3_4 = 45.397414 250.0
angle_range_xim_4_1 = 71.950053 250.0
angle_range_xim_4_2 = 45.397414 250.0
angle_range_xim_4_3 = 45.397414 250.0
angle_range_xim_4_4 = 36.060448 250.0
angle_range_gammat_1_1 = 64.0 250.0
angle_range_gammat_1_2 = 64.0 250.0
angle_range_gammat_1_3 = 64.0 250.0
angle_range_gammat_1_4 = 64.0 250.0
angle_range_gammat_2_1 = 40.0 250.0
angle_range_gammat_2_2 = 40.0 250.0
angle_range_gammat_2_3 = 40.0 250.0
angle_range_gammat_2_4 = 40.0 250.0
angle_range_gammat_3_1 = 30.0 250.0
angle_range_gammat_3_2 = 30.0 250.0
angle_range_gammat_3_3 = 30.0 250.0
angle_range_gammat_3_4 = 30.0 250.0
angle_range_gammat_4_1 = 24.0 250.0
angle_range_gammat_4_2 = 24.0 250.0
angle_range_gammat_4_3 = 24.0 250.0
angle_range_gammat_4_4 = 24.0 250.0
angle_range_gammat_5_1 = 21.0 250.0
angle_range_gammat_5_2 = 21.0 250.0
angle_range_gammat_5_3 = 21.0 250.0
angle_range_gammat_5_4 = 21.0 250.0
angle_range_wtheta_1_1 = 43.0 250.0
angle_range_wtheta_2_2 = 27.0 250.0
angle_range_wtheta_3_3 = 20.0 250.0
angle_range_wtheta_4_4 = 16.0 250.0
angle_range_wtheta_5_5 = 14.0 250.0

[consistency]
; Just makes sure you didn't choose self-conflicting parameter choices.
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
; Settings for CAMB. This is the boltzmann equation solver code that gives us the initial perturbation power spectrum and CMB observables (if needed).
file = cosmosis-standard-library/boltzmann/camb/camb_interface.py
mode = all
halofit_version = takahashi
lmax = 1200
feedback = 0
kmin = 1e-4
kmax = 10.0
nk = 100
accuracy_boost = 0.4

[extrapolate]
; Code to extrapolate the power spectrum beyond where we solve for it with a power law. Approximate, but fast.
file = cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.

[halofit]
; Code that calculates the nonlinear part of the matter power spectrum (where linear perturbation theory breaks down -- it is calibrated from simulations)
file = cosmosis-standard-library/boltzmann/halofit/halofit_module.so
nk = 3500

[pk_to_cl]
; Do the conversion from 3D power spectra to 2D power spectra as we talked about in class.
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min_logspaced = 0.1
ell_max_logspaced = 5.0e5
n_ell_logspaced = 200
verbose = F
get_kernel_peaks = F
fast-shear-shear-ia = source-source

[IA]
; The intrinsic galaxy alignment model
file = cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
do_galaxy_intrinsic = F
method = bk_corrected

[add_intrinsic]
; The intrinsic galaxy alignment model
file = cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
shear-shear = T
perbin = F

[ia_z_field]
; Add redshift dependence (power-law) to IA model
file = cosmosis-standard-library/intrinsic_alignments/z_powerlaw/ia_z_powerlaw.py
do_galaxy_intrinsic = F

[fits_nz]
; Read in the redshift distributions for each correlation function measurement.
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(2PT_FILE)s
data_sets = source lens
prefix_section = T
prefix_extension = T

[2pt_shear]
; Calculate the correlation function (xi_plus/minus) for cosmic shear
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so
corr_type = 0

[shear_m_bias]
; Apply shear multiplicative bias corrections.
file = cosmosis-standard-library/shear/shear_bias/shear_m_bias.py
m_per_bin = True
verbose = F

[source_photoz_bias]
; Apply mean redshift corrections.
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = wl_photoz_errors
interpolation = linear

[pantheon]
; Code to calculate the supernova likelihood
file = cosmosis-standard-library/likelihood/pantheon/pantheon.py
data_file = /hpc/group/cosmology/denniswu/phy555/sample/lcparam_DESonly.txt
covmat_file = /hpc/group/cosmology/denniswu/phy555/sample/sys_DESonly_ALLSYS2.txt

[riess16]
; Code to apply the h0 prior from local measurements
file = cosmosis-standard-library/likelihood/riess16/riess16.py


